services:
    nginx:
        container_name: online_store_nginx
        image: nginx:alpine  # Use the Nginx image
        ports:
            - "8080:80"  # Map port 8080 on the host to port 80 inside the container
        volumes:
            - ./:/var/www  # Mount the Laravel application directory
            - ./nginx.conf:/etc/nginx/conf.d/default.conf  # Use our Nginx config
        depends_on:
            - app  # Ensure PHP-FPM is started before Nginx
        networks:
            - laravel-network  # Connect to the custom network

    app:
        container_name: online_store_app
        build: .  # Build from the Dockerfile
        depends_on:
            - db
        volumes:
            - ./:/var/www  # Mount the Laravel application directory
        networks:
            - laravel-network  # Connect to the custom network

    db:
        container_name: online_store_db
        image: mysql:8  # Use MySQL image
        restart: always
        ports:
            - "3307:3306"
        environment:
            MYSQL_DATABASE: online_store  # Create a database named 'laravel'
            MYSQL_ROOT_PASSWORD: root  # Set the root password for MySQL
        volumes:
            - online_store_db:/var/lib/mysql  # Persist MySQL data
        networks:
            - laravel-network  # Connect to the custom network

    online_store_node:
        container_name: online_store_node
        image: node:20
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - laravel-network
        command: bash -c "npm install && npm run dev"

# Define the custom network
networks:
    laravel-network:  # Create a custom network named 'laravel-network'
        driver: bridge

# Define the volume for MySQL data persistence
volumes:
    online_store_db:
